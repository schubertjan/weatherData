yDat <- weatherDat[!(format(Day,format = "%Y")) %in% c("2009", "2019"),
.(Max10.Temperature = quantile(Max.Temperature, probs = 0.9),
Avg.Temperature = median(Max.Temperature),
Min10.Temperature = min(Max.Temperature, probs = 0.1)),
by = .(Year = format(Day,format = "%Y"))]
plot(1:9, yDat$Avg.Temperature,
ylim=range(c(yDat$Min10.Temperature, yDat$Max10.Temperature)),
pch=19,
ylab = "Temperature (C)",
xlab = NA,
xaxt = "n",
main = "Median, Lowest and Highest 10% Temperature")
axis(1,at=1:9,labels = yDat$Year)
# horizontal error bars
arrows(x0 = 1:9,
y0 = yDat$Min10.Temperature,
x1 = 1:9,
y1 = yDat$Max10.Temperature, length=0.05, angle=90, code=3)
#precipitation a year
yDat <- weatherDat[!(format(Day,format = "%Y")) %in% c("2009", "2019"),
.(Precipitation = sum(Precipitation)),
by = .(Year = format(Day,format = "%Y"))]
precip_long_term <- yDat[!Year %in% c("2009", "2019"), mean(Precipitation)]
barplot(yDat$Precipitation,
names.arg = yDat$Year,
main = "Total Precipitation And Long Term Average",
ylab = "mm")
abline(a = precip_long_term, b = 0, col = "blue")
yDat <- weatherDat[!(format(Day,format = "%Y")) %in% c("2009", "2019")  & Precipitation > 0,
.(Precipitation = mean(Precipitation)),
by = .(Year = format(Day,format = "%Y"))]
barplot(yDat$Precipitation,
names.arg = yDat$Year,
main = "Average Daily Precipitation",
ylab = "mm")
weatherDat[Precipitation > 0, Precip_above_longterm := ifelse(Precipitation > mean(Precipitation), TRUE, FALSE)]
yDat <- weatherDat[!(format(Day,format = "%Y")) %in% c("2009", "2019"),
.(Precipitation_trend = sum(Precip_above_longterm)),
by = .(Year = format(Day,format = "%Y"))]
barplot(yDat$Precipitation_trend,
names.arg = yDat$Year,
main = "Number of Days with Precipitation Higher Than Long Term Average",
ylab = "Count")
# url
seqDates <- seq.Date(from = as.Date("2018-03-01"),
to = Sys.Date(),
by = "day")
seqDates_url <- paste(format(seqDates, format = "%d"), format(seqDates, format = "%m"), format(seqDates, format = "%Y"), sep = "-")
weather_list <- lapply(seqDates_url, function(x) {
weatherUrl <- paste0("https://www.in-pocasi.cz/archiv/archiv.php?historie=",x,"&stanice_kraj=14&klima_kraj=14")
scrapeWeather(weatherUrl)
})
library(data.table)
library(rvest)
## SCRAPE
scrapeWeather <- function(weatherUrl) {
#Reading the HTML code from the website
webpage <- read_html(weatherUrl)
#Using CSS selectors to scrap the title section
weather_data_html <- html_nodes(webpage, '.prehled')
#Converting the title data to text
weather_data <-
html_table(weather_data_html, fill = TRUE, header = TRUE)
#format to a data.frame
weather_data <- as.data.frame(weather_data)
#loose the NA rows
weather_data <- weather_data[!is.na(weather_data$Stanice),]
return(weather_data)
}
# url
seqDates <- seq.Date(from = as.Date("2018-03-01"),
to = Sys.Date(),
by = "day")
seqDates_url <- paste(format(seqDates, format = "%d"), format(seqDates, format = "%m"), format(seqDates, format = "%Y"), sep = "-")
weather_list <- lapply(seqDates_url, function(x) {
weatherUrl <- paste0("https://www.in-pocasi.cz/archiv/archiv.php?historie=",x,"&stanice_kraj=14&klima_kraj=14")
scrapeWeather(weatherUrl)
})
names(weather_list) <- seqDates
weatherDat <- lapply(weather_list, function(x) {
x[x$Stanice == "Praha 9, Prosek", ]
})
weatherDat <- as.data.table(do.call(rbind, weatherDat),keep.rownames = TRUE)
names(weatherDat)[c(1,3:8)] <- c("Day", "Max.Temperature", "Min.Temperature", "Wind", "Precipitation", "Max.Pressure", "Max.Humidity")
selCol <- names(weatherDat)[3:8]
weatherDat[, selCol[1:2] := list(gsub(" °C","",Max.Temperature), gsub(" °C","",Min.Temperature))]
weatherDat[, selCol[3] := gsub(" km/h","",Wind)]
weatherDat[, selCol[4] := gsub(" mm","",Precipitation)]
weatherDat[, selCol[5] := gsub(" hPa","",Max.Pressure)]
weatherDat[, selCol[6] := gsub("%","",Max.Humidity)]
weatherDat[, c(selCol) := lapply(.SD, as.numeric), .SDcols = selCol]
#format date
weatherDat[, Day := as.Date(Day, format = "%Y-%m-%d")]
weather_list <- NULL
with(weatherDat, plot(Day, Max.Temperature, type = "l", xlab = NA, ylab = NA))
lines(loess.smooth(weatherDat$Day, weatherDat$Max.Temperature), col = "red")
lines(weatherDat$Day, weatherDat$Precipitation, col = "blue")
legend("bottomright",
legend = c("Max.Temperature", "Max.Temperature-trend","Precipitation"),
bg="transparent",
lty=c(1,1,1),
col = c("black", "red", "blue"))
yDat <- weatherDat[!(format(Day,format = "%Y")) %in% c("2009", "2019"),
.(Max10.Temperature = quantile(Max.Temperature, probs = 0.9),
Avg.Temperature = median(Max.Temperature),
Min10.Temperature = min(Max.Temperature, probs = 0.1)),
by = .(Year = format(Day,format = "%Y"))]
plot(1:9, yDat$Avg.Temperature,
ylim=range(c(yDat$Min10.Temperature, yDat$Max10.Temperature)),
pch=19,
ylab = "Temperature (C)",
xlab = NA,
xaxt = "n",
main = "Median, Lowest and Highest 10% Temperature")
#precipitation a year
yDat <- weatherDat[!(format(Day,format = "%Y")) %in% c("2009", "2019"),
.(Precipitation = sum(Precipitation)),
by = .(Year = format(Day,format = "%Y"))]
precip_long_term <- yDat[!Year %in% c("2009", "2019"), mean(Precipitation)]
barplot(yDat$Precipitation,
names.arg = yDat$Year,
main = "Total Precipitation And Long Term Average",
ylab = "mm")
abline(a = precip_long_term, b = 0, col = "blue")
yDat <- weatherDat[!(format(Day,format = "%Y")) %in% c("2009", "2019")  & Precipitation > 0,
.(Precipitation = mean(Precipitation)),
by = .(Year = format(Day,format = "%Y"))]
barplot(yDat$Precipitation,
names.arg = yDat$Year,
main = "Average Daily Precipitation",
ylab = "mm")
weatherDat[Precipitation > 0, Precip_above_longterm := ifelse(Precipitation > mean(Precipitation), TRUE, FALSE)]
yDat <- weatherDat[!(format(Day,format = "%Y")) %in% c("2009", "2019"),
.(Precipitation_trend = sum(Precip_above_longterm)),
by = .(Year = format(Day,format = "%Y"))]
barplot(yDat$Precipitation_trend,
names.arg = yDat$Year,
main = "Number of Days with Precipitation Higher Than Long Term Average",
ylab = "Count")
yDat
yDat <- weatherDat[!(format(Day,format = "%Y")) %in% c("2009", "2019"),
.(Precipitation_trend = sum(Precip_above_longterm, na.rm = TRUE)),
by = .(Year = format(Day,format = "%Y"))]
barplot(yDat$Precipitation_trend,
names.arg = yDat$Year,
main = "Number of Days with Precipitation Higher Than Long Term Average",
ylab = "Count")
knitr::opts_chunk$set(echo = TRUE, fig.width = 10)
## SCRAPE
scrapeWeather <- function(weatherUrl) {
#Reading the HTML code from the website
webpage <- read_html(weatherUrl)
#Using CSS selectors to scrap the title section
weather_data_html <- html_nodes(webpage, '.prehled')
#Converting the title data to text
weather_data <-
html_table(weather_data_html, fill = TRUE, header = TRUE)
#format to a data.frame
weather_data <- as.data.frame(weather_data)
#loose the NA rows
weather_data <- weather_data[!is.na(weather_data$Stanice),]
return(weather_data)
}
scrapeWeather("https://www.in-pocasi.cz/archiv/archiv.php?historie=01-01-1775&stanice_kraj=14&klima_kraj=0#klima")
library(data.table)
library(rvest)
scrapeWeather("https://www.in-pocasi.cz/archiv/archiv.php?historie=01-01-1775&stanice_kraj=14&klima_kraj=0#klima")
scrapeWeather("https://www.in-pocasi.cz/archiv/archiv.php?historie=01-01-2018&stanice_kraj=14&klima_kraj=0#klima")
weatherUrl <- "https://www.in-pocasi.cz/archiv/archiv.php?historie=01-01-2018&klima_kraj=0#klima"
webpage <- read_html(weatherUrl)
#Using CSS selectors to scrap the title section
weather_data_html <- html_nodes(webpage, '.prehled')
#Converting the title data to text
weather_data <-
html_table(weather_data_html, fill = TRUE, header = TRUE)
weather_data <- as.data.frame(weather_data)
weather_data
weather_data <- as.data.frame(weather_data[[1]])
weather_data
scrapeWeather <- function(weatherUrl) {
#Reading the HTML code from the website
webpage <- read_html(weatherUrl)
#Using CSS selectors to scrap the title section
weather_data_html <- html_nodes(webpage, '.prehled')
#Converting the title data to text
weather_data <-
html_table(weather_data_html, fill = TRUE, header = TRUE)
#format to a data.frame
weather_data <- as.data.frame(weather_data[[1]])
#loose the NA rows
weather_data <- weather_data[!is.na(weather_data$Stanice),]
return(weather_data)
}
weatherUrl <- "https://www.in-pocasi.cz/archiv/archiv.php?historie=01-01-2018&klima_kraj=0#klima"
scrapeWeather("https://www.in-pocasi.cz/archiv/archiv.php?historie=01-01-2018&stanice_kraj=14&klima_kraj=0#klima")
scrapeWeather("https://www.in-pocasi.cz/archiv/archiv.php?historie=01-01-1775&stanice_kraj=14&klima_kraj=0#klima")
library(data.table)
library(rvest)
## SCRAPE
scrapeWeather <- function(weatherUrl) {
#Reading the HTML code from the website
webpage <- read_html(weatherUrl)
#Using CSS selectors to scrap the title section
weather_data_html <- html_nodes(webpage, '.prehled')
#Converting the title data to text
weather_data <-
html_table(weather_data_html, fill = TRUE, header = TRUE)
#format to a data.frame
weather_data <- as.data.frame(weather_data[[1]])
#loose the NA rows
weather_data <- weather_data[!is.na(weather_data$Stanice),]
return(weather_data)
}
knitr::opts_chunk$set(echo = TRUE, fig.width = 10)
library(data.table)
library(rvest)
## SCRAPE
scrapeWeather <- function(weatherUrl) {
#Reading the HTML code from the website
webpage <- read_html(weatherUrl)
#Using CSS selectors to scrap the title section
weather_data_html <- html_nodes(webpage, '.prehled')
#Converting the title data to text
weather_data <-
html_table(weather_data_html, fill = TRUE, header = TRUE)
#format to a data.frame
weather_data <- as.data.frame(weather_data[[1]])
#loose the NA rows
weather_data <- weather_data[!is.na(weather_data$Stanice),]
return(weather_data)
}
# url
seqDates <- seq.Date(from = as.Date("2017-01-01"),
to = Sys.Date(),
by = "day")
seqDates_url <- paste(format(seqDates, format = "%d"), format(seqDates, format = "%m"), format(seqDates, format = "%Y"), sep = "-")
weather_list <- lapply(seqDates_url, function(x) {
weatherUrl <- paste0("https://www.in-pocasi.cz/archiv/archiv.php?historie=",x,"stanice_kraj=14&klima_kraj=0#klima")
scrapeWeather(weatherUrl)
})
names(weather_list) <- seqDates
weather_list[[1]]
weather_list[[2]]
# url
seqDates <- seq.Date(from = as.Date("2018-01-01"),
to = Sys.Date(),
by = "day")
seqDates_url <- paste(format(seqDates, format = "%d"), format(seqDates, format = "%m"), format(seqDates, format = "%Y"), sep = "-")
weather_list <- lapply(seqDates_url, function(x) {
weatherUrl <- paste0("https://www.in-pocasi.cz/archiv/archiv.php?historie=",x,"&stanice_kraj=0&klima_kraj=0#klima")
scrapeWeather(weatherUrl)
})
names(weather_list) <- seqDates
weather_list[[1]]
knitr::opts_chunk$set(echo = TRUE, fig.width = 10)
library(data.table)
library(rvest)
## SCRAPE
scrapeWeather <- function(weatherUrl) {
#Reading the HTML code from the website
webpage <- read_html(weatherUrl)
#Using CSS selectors to scrap the title section
weather_data_html <- html_nodes(webpage, '.prehled')
#Converting the title data to text
weather_data <-
html_table(weather_data_html, fill = TRUE, header = TRUE)
#format to a data.frame
weather_data <- as.data.frame(weather_data[[1]])
#loose the NA rows
weather_data <- weather_data[!is.na(weather_data$Stanice),]
return(weather_data)
}
# url
seqDates <- seq.Date(from = as.Date("2019-01-01"),
to = Sys.Date(),
by = "day")
seqDates_url <- paste(format(seqDates, format = "%d"), format(seqDates, format = "%m"), format(seqDates, format = "%Y"), sep = "-")
weather_list <- lapply(seqDates_url, function(x) {
weatherUrl <- paste0("https://www.in-pocasi.cz/archiv/archiv.php?historie=",x,"&stanice_kraj=0&klima_kraj=0#klima")
scrapeWeather(weatherUrl)
})
names(weather_list) <- seqDates
weather_list[[1]]
# url
seqDates <- seq.Date(from = as.Date("1775-01-01"),
to = Sys.Date(),
by = "day")
seqDates_url <- paste(format(seqDates, format = "%d"), format(seqDates, format = "%m"), format(seqDates, format = "%Y"), sep = "-")
weather_list <- lapply(seqDates_url, function(x) {
weatherUrl <- paste0("https://www.in-pocasi.cz/archiv/archiv.php?historie=",x,"&stanice_kraj=0&klima_kraj=0#klima")
scrapeWeather(weatherUrl)
})
knitr::opts_chunk$set(echo = TRUE, fig.width = 10)
library(data.table)
library(rvest)
## SCRAPE
scrapeWeather <- function(weatherUrl) {
#Reading the HTML code from the website
webpage <- read_html(weatherUrl)
#Using CSS selectors to scrap the title section
weather_data_html <- html_nodes(webpage, '.prehled')
#Converting the title data to text
weather_data <-
html_table(weather_data_html, fill = TRUE, header = TRUE)
#format to a data.frame
weather_data <- as.data.frame(weather_data[[1]])
#loose the NA rows
weather_data <- weather_data[!is.na(weather_data$Stanice),]
return(weather_data)
}
?Sys.sleep
knitr::opts_chunk$set(echo = TRUE, fig.width = 10)
library(data.table)
library(rvest)
## SCRAPE
scrapeWeather <- function(weatherUrl) {
#Reading the HTML code from the website
webpage <- read_html(weatherUrl)
#Using CSS selectors to scrap the title section
weather_data_html <- html_nodes(webpage, '.prehled')
#Converting the title data to text
weather_data <-
html_table(weather_data_html, fill = TRUE, header = TRUE)
#format to a data.frame
weather_data <- as.data.frame(weather_data[[1]])
#loose the NA rows
weather_data <- weather_data[!is.na(weather_data$Stanice),]
Sys.sleep(2)
return(weather_data)
}
# url
seqDates <- seq.Date(from = as.Date("1950-01-01"),
to = Sys.Date(),
by = "day")
seqDates_url <- paste(format(seqDates, format = "%d"), format(seqDates, format = "%m"), format(seqDates, format = "%Y"), sep = "-")
weather_list <- lapply(seqDates_url, function(x) {
weatherUrl <- paste0("https://www.in-pocasi.cz/archiv/archiv.php?historie=",x,"&stanice_kraj=0&klima_kraj=0#klima")
scrapeWeather(weatherUrl)
})
weather_list <- rep(list(NULL),length(segDates))
seqDates <- seq.Date(from = as.Date("1950-01-01"),
to = Sys.Date(),
by = "day")
seqDates_url <- paste(format(seqDates, format = "%d"), format(seqDates, format = "%m"), format(seqDates, format = "%Y"), sep = "-")
weather_list <- rep(list(NULL),length(segDates))
weather_list <- rep(list(NULL),length(seqDates))
weather_list
library(data.table)
library(rvest)
## SCRAPE
scrapeWeather <- function(weatherUrl) {
#Reading the HTML code from the website
webpage <- read_html(weatherUrl)
#Using CSS selectors to scrap the title section
weather_data_html <- html_nodes(webpage, '.prehled')
#Converting the title data to text
weather_data <-
html_table(weather_data_html, fill = TRUE, header = TRUE)
#format to a data.frame
weather_data <- as.data.frame(weather_data[[1]])
#loose the NA rows
weather_data <- weather_data[!is.na(weather_data$Stanice),]
Sys.sleep(2)
return(weather_data)
}
# url
seqDates <- seq.Date(from = as.Date("2000-01-01"),
to = Sys.Date(),
by = "day")
seqDates_url <- paste(format(seqDates, format = "%d"), format(seqDates, format = "%m"), format(seqDates, format = "%Y"), sep = "-")
weather_list <- rep(list(NULL),length(seqDates))
names(weather_list) <- seqDates
for(i in seq_along(seqDates_url)){
tryCatch({
weatherUrl <- paste0("https://www.in-pocasi.cz/archiv/archiv.php?historie=",i,"&stanice_kraj=0&klima_kraj=0#klima")
weather_list[[i]] <- scrapeWeather(weatherUrl)
},  error=function(e){})
}
i
weather_list[[1]]
weather_list[[2]]
weather_list[[3]]
library(data.table)
library(rvest)
## SCRAPE
scrapeWeather <- function(weatherUrl) {
#Reading the HTML code from the website
webpage <- read_html(weatherUrl)
#Using CSS selectors to scrap the title section
weather_data_html <- html_nodes(webpage, '.prehled')
#Converting the title data to text
weather_data <-
html_table(weather_data_html, fill = TRUE, header = TRUE)
#format to a data.frame
weather_data <- as.data.frame(weather_data[[1]])
#loose the NA rows
weather_data <- weather_data[!is.na(weather_data$Stanice),]
return(weather_data)
}
seqDates <- seq.Date(from = as.Date("2018-01-01"),
to = Sys.Date(),
by = "day")
seqDates_url <- paste(format(seqDates, format = "%d"), format(seqDates, format = "%m"), format(seqDates, format = "%Y"), sep = "-")
weather_list <- rep(list(NULL),length(seqDates))
names(weather_list) <- seqDates
weather_list
seq_along(seqDates_url)
i <- 1
tryCatch({
weatherUrl <- paste0("https://www.in-pocasi.cz/archiv/archiv.php?historie=",i,"&stanice_kraj=0&klima_kraj=0#klima")
weather_list[[i]] <- scrapeWeather(weatherUrl)
},  error=function(e){})
weatherUrl <- paste0("https://www.in-pocasi.cz/archiv/archiv.php?historie=",i,"&stanice_kraj=0&klima_kraj=0#klima")
weather_list[[i]] <- scrapeWeather(weatherUrl)
# url
seqDates <- seq.Date(from = as.Date("2018-01-01"),
to = Sys.Date(),
by = "day")
seqDates_url <- paste(format(seqDates, format = "%d"), format(seqDates, format = "%m"), format(seqDates, format = "%Y"), sep = "-")
weather_list <- rep(list(NULL),length(seqDates))
names(weather_list) <- seqDates
for(i in seq_along(seqDates_url)){
tryCatch({
weatherUrl <- paste0("https://www.in-pocasi.cz/archiv/archiv.php?historie=",seqDates_url[i],"&stanice_kraj=0&klima_kraj=0#klima")
weather_list[[i]] <- scrapeWeather(weatherUrl)
},  error=function(e){})
}
i
weather_list[[1]]
weatherDat <- lapply(weather_list, function(x) {
x[x$Stanice == "Praha - Klementinum", ]
})
weatherDat <- as.data.table(do.call(rbind, weatherDat),keep.rownames = TRUE)
names(weatherDat)[c(1,3:8)] <- c("Day", "Max.Temperature", "Min.Temperature", "Wind", "Precipitation", "Max.Pressure", "Max.Humidity")
selCol <- names(weatherDat)[3:8]
weatherDat[, selCol[1:2] := list(gsub(" °C","",Max.Temperature), gsub(" °C","",Min.Temperature))]
weatherDat[, selCol[3] := gsub(" km/h","",Wind)]
weatherDat[, selCol[4] := gsub(" mm","",Precipitation)]
weatherDat[, selCol[5] := gsub(" hPa","",Max.Pressure)]
weatherDat[, selCol[6] := gsub("%","",Max.Humidity)]
weatherDat[, c(selCol) := lapply(.SD, as.numeric), .SDcols = selCol]
#format date
weatherDat[, Day := as.Date(Day, format = "%Y-%m-%d")]
weather_list <- NULL
weatherDat
# url
seqDates <- seq.Date(from = as.Date("2019-01-01"),
to = Sys.Date(),
by = "day")
seqDates_url <- paste(format(seqDates, format = "%d"), format(seqDates, format = "%m"), format(seqDates, format = "%Y"), sep = "-")
weather_list <- rep(list(NULL),length(seqDates))
names(weather_list) <- seqDates
for(i in seq_along(seqDates_url)){
tryCatch({
weatherUrl <- paste0("https://www.in-pocasi.cz/archiv/archiv.php?historie=",seqDates_url[i],"&stanice_kraj=0&klima_kraj=0#klima")
weather_list[[i]] <- scrapeWeather(weatherUrl)
},  error=function(e){})
}
weather_list[[1]]
# url
seqDates <- seq.Date(from = as.Date("1775-01-01"),
to = Sys.Date(),
by = "day")
seqDates_url <- paste(format(seqDates, format = "%d"), format(seqDates, format = "%m"), format(seqDates, format = "%Y"), sep = "-")
weather_list <- rep(list(NULL),length(seqDates))
names(weather_list) <- seqDates
for(i in seq_along(seqDates_url)){
tryCatch({
weatherUrl <- paste0("https://www.in-pocasi.cz/archiv/archiv.php?historie=",seqDates_url[i],"&stanice_kraj=0&klima_kraj=0#klima")
weather_list[[i]] <- scrapeWeather(weatherUrl)
},  error=function(e){})
}
i
weatherDat <- lapply(weather_list, function(x) {
x[x$Stanice == "Praha - Klementinum", ]
})
weatherDat <- as.data.table(do.call(rbind, weatherDat),keep.rownames = TRUE)
names(weatherDat)[c(1,3:8)] <- c("Day", "Max.Temperature", "Min.Temperature", "Wind", "Precipitation", "Max.Pressure", "Max.Humidity")
selCol <- names(weatherDat)[3:8]
weatherDat[, selCol[1:2] := list(gsub(" °C","",Max.Temperature), gsub(" °C","",Min.Temperature))]
weatherDat[, selCol[3] := gsub(" km/h","",Wind)]
weatherDat[, selCol[4] := gsub(" mm","",Precipitation)]
weatherDat[, selCol[5] := gsub(" hPa","",Max.Pressure)]
weatherDat[, selCol[6] := gsub("%","",Max.Humidity)]
weatherDat[, c(selCol) := lapply(.SD, as.numeric), .SDcols = selCol]
#format date
weatherDat[, Day := as.Date(Day, format = "%Y-%m-%d")]
weather_list <- NULL
weatherDat
with(weatherDat, plot(Day, Max.Temperature, type = "l", xlab = NA, ylab = NA))
lines(loess.smooth(weatherDat$Day, weatherDat$Max.Temperature), col = "red")
lines(weatherDat$Day, weatherDat$Precipitation, col = "blue")
legend("bottomright",
legend = c("Max.Temperature", "Max.Temperature-trend","Precipitation"),
bg="transparent",
lty=c(1,1,1),
col = c("black", "red", "blue"))
yDat <- weatherDat[!(format(Day,format = "%Y")) %in% c("2009", "2019"),
.(Max10.Temperature = quantile(Max.Temperature, probs = 0.9),
Avg.Temperature = median(Max.Temperature),
Min10.Temperature = min(Max.Temperature, probs = 0.1)),
by = .(Year = format(Day,format = "%Y"))]
plot(1:9, yDat$Avg.Temperature,
ylim=range(c(yDat$Min10.Temperature, yDat$Max10.Temperature)),
pch=19,
ylab = "Temperature (C)",
xlab = NA,
xaxt = "n",
main = "Median, Lowest and Highest 10% Temperature")
sessionInfo()
library(rmarkdown)
sessionInfo()
